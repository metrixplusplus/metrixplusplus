[LOG]: WARNING:	Logging enabled with INFO level
[LOG]: INFO:	Excluding: ./.unused.cpp
[LOG]: INFO:	Skipping: ./dummy.txt
[LOG]: INFO:	Processing: ./file_deleted_in_new_sources.cpp
Traceback (most recent call last):
  File "D:\Anwendungen\Analyse\metrixplusplus\metrixpp\../metrix++.py", line 10, in <module>
    metrixpp.start()
  File "D:\Anwendungen\Analyse\metrixplusplus\metrixpp\metrixpp.py", line 38, in start
    exit_code = main()
  File "D:\Anwendungen\Analyse\metrixplusplus\metrixpp\metrixpp.py", line 30, in main
    exit_code = loader.run(args)
  File "D:\Anwendungen\Analyse\metrixplusplus\metrixpp\mpp\internal\loader.py", line 206, in run
    exit_code += item.run(args)
  File "D:\Anwendungen\Analyse\metrixplusplus\metrixpp\ext\std\tools\collect.py", line 84, in run
    return self.reader.run(self, "./")
  File "D:\Anwendungen\Analyse\metrixplusplus\metrixpp\ext\std\tools\collect.py", line 449, in run
    total_errors = run_recursively(plugin, directory)
  File "D:\Anwendungen\Analyse\metrixplusplus\metrixpp\ext\std\tools\collect.py", line 440, in run_recursively
    exit_code += run_per_file(plugin, fname, full_path)
  File "D:\Anwendungen\Analyse\metrixplusplus\metrixpp\ext\std\tools\collect.py", line 414, in run_per_file
    procerrors = parser.process(plugin, data, is_updated)
  File "D:\Anwendungen\Analyse\metrixplusplus\metrixpp\ext\std\code\cpp.py", line 38, in process
    self.notify_children(data, is_updated)
  File "D:\Anwendungen\Analyse\metrixplusplus\metrixpp\mpp\api.py", line 85, in notify_children
    child[0].notify(self, child[1], *args)
  File "D:\Anwendungen\Analyse\metrixplusplus\metrixpp\mpp\api.py", line 51, in notify
    self.__getattribute__(callback_name)(parent, *args)
  File "D:\Anwendungen\Analyse\metrixplusplus\metrixpp\mpp\api.py", line 1242, in callback
    alias=parent.get_name())
  File "D:\Anwendungen\Analyse\metrixplusplus\metrixpp\mpp\api.py", line 1260, in count_if_active
    counter = counter_class(namespace, field, self, alias, data, region)
  File "D:\Anwendungen\Analyse\metrixplusplus\metrixpp\ext\std\code\halstead_base.py", line 293, in __init__
    self.get_DictCounter()
  File "D:\Anwendungen\Analyse\metrixplusplus\metrixpp\ext\std\code\halstead_base.py", line 267, in get_DictCounter
    self.dictcounter = self.plugin.halstead_dict[dictkey]
KeyError: '__global__'
