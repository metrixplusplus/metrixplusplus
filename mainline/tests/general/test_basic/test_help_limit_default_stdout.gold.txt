Usage: metrixpp.py limit [options] -- [path 1] ... [path N]

Options:
  -h, --help            show this help message and exit
  --general.log-level=GENERAL.LOG_LEVEL
                        Defines log level. Possible values are
                        'DEBUG','INFO','WARNING' or 'ERROR'. Default value is
                        inherited from environment variable
                        'METRIXPLUSPLUS_LOG_LEVEL' if set. [default: INFO]
  --general.db-file=GENERAL.DB_FILE
                        Primary database file to write (by the collector) and
                        post-process (by other tools) [default: ./metrixpp.db]
  --general.db-file-prev=GENERAL.DB_FILE_PREV
                        Database file with data collected for the
                        past/previous revision. If it is set for the collector
                        tool to perform an incremental/iterative collection,
                        it may reduce the processing time significantly. Post-
                        processing tools use it in order to recognise/evaluate
                        change trends. [default: none].
  --general.warn=GENERAL.WARN
                        Defines the warnings mode. 'new' - warnings for new
                        regions only, 'trend' - warnings for new regions and
                        for bad trend of modified regions, 'touched' -
                        warnings for new regions and modified regions, 'all' -
                        all warnings active [default: all]
  --general.min-limit=GENERAL.MIN_LIMIT
                        A threshold per 'namespace:field' metric in order to
                        select regions, which have got metric value less than
                        the specified limit. This option can be specified
                        multiple times, if it is necessary to apply several
                        limits. Should be in the format: <namespace>:<field
                        >:<limit-value>, for example:
                        'std.code.complexity:cyclomatic:7'.
  --general.max-limit=GENERAL.MAX_LIMIT
                        A threshold per 'namespace:field' metric in order to
                        select regions, which have got metric value more than
                        the specified limit. This option can be specified
                        multiple times, if it is necessary to apply several
                        limits. Should be in the format: <namespace>:<field
                        >:<limit-value>, for example:
                        'std.code.complexity:cyclomatic:7'.
  --general.hotspots=GENERAL.HOTSPOTS
                        If not set (none), all exceeded limits are printed. If
                        set, exceeded limits are sorted (the worst is the
                        first) and only first GENERAL.HOTSPOTS limits are
                        printed. [default: none]
